<?php
// $Id$

/**
 * @file
 * Stores and displays a trail of previously visited pages.
 */

/**
 * Implements hook_init().
 *
 * Learn more about hook_init() here:
 * http://api.drupal.org/api/drupal/developer--hooks--core.php/function/hook_init/6
 *
 */
function trails_init() {

  // Grab the trail history from a variable
  $trail = variable_get('trails_history', array());

  $num_of_trail = count($trail);
  $title = strip_tags(drupal_get_title());

// Check the current page is already being saved in the $trail.
// If it exists, delete the old record and save new record.
  for ($i = 0; $i < ($num_of_trail - 1); $i++) {
    if ($num_of_trail && $trail[$i]['title'] == $title) {
      print_r($trail[$i]);
      array_splice($trail,$i,1);
    };
  };
  // Add current page to trail.
  $trail[] = array(
    'title' => strip_tags(drupal_get_title()),
    'path' => $_GET['q'],
    'timestamp' => REQUEST_TIME,
    //'source' => path_load(),
  );

  // Save the trail as a variable
  variable_set('trails_history', $trail);
}


/**
 * Implements hook_permission().
 *
 * Learn more about hook_permission here:
 * http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_permission/7
 */
function trails_permission() {
  return array(
    'administer trails' => array(
      'title' => t('Administer Trails module'),
      'description' => t('Perform administration tasks for Trails module.'),
    ),
    'access trails blocks' => array(
      'title' => t('Access Trails blocks'),
      'description' => t('View blocks generated by the Trails module.'),
    ),
  );
}


/**
 * Implements hook_menu().
 *
 * Challenge yourself!
 *  - Add a new page that displays all history.
 */
function trails_menu() {
  // Module settings.
  $items['admin/config/trails'] = array(
    'title' => 'Trails',
    'description' => 'trails configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trails_admin_settings'),
    'access arguments' => array('administer trails'),
    'file' => 'trails.admin.inc',
    'file path' => drupal_get_path('module', 'trails'),
  );
  return $items;
}


/**
 * Implements hook_help().
 */
function trails_help($path, $arg) {
  switch ($path) {
    case 'admin/config/trails':
      return t('This settings page alows you to configure global settings for the Trails module.');

    case 'admin/help#trails':
      $output = '<p>' . t('Trails is a simple module that displays a trail of pages that were last visited.') . '</p>';
      return $output;
  }
}


/**
 * Implements hook_block_info().
 *
 * For another example of using block hook functions, see:
 * http://api.drupal.org/api/examples/block_example--block_example.module/7
 *
 * Learn more about hook_block_info() at:
 * http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_info/7
 *
 * Challenge yourself!
 *  - Add another block with a link to delete all history.
 */
function trails_block_info() {
  $blocks['history'] = array(
    'info' => t('History'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * Learn more about hook_block_configure() here:
 * http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_configure/7
 *
 * Challenge yourself!
 *  - Add a setting for the 'granularity' used in the format_interval() function you see
 *    in hook_block_view().
 */
function trails_block_configure($delta = '') {
  // Get the maximum allowed value from the configuration form.
  $max_to_display = variable_get('trails_block_max', 50);

  // Add a select box of numbers form 1 to $max_to_display.
  $form['trails_block_num'] = array(
    '#type' => 'select',
    '#title' => t('Number of items to show'),
    '#default_value' => variable_get('trails_block_num', '5'),
    '#options' => drupal_map_assoc(range(1, $max_to_display)),
  );
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Learn more about hook_block_save() here:
 * http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_save/7
 */
function trails_block_save($delta = '', $edit = array()) {
  variable_set('trails_block_num', $edit['trails_block_num']);
}

/**
 * Implements hook_block_view().
 *
 * Generates block to display recently visited pages.
 *
 * Learn more about hook_block_configure() here:
 * http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_view/7
 *
 */
function trails_block_view($delta = '') {
  if (user_access('access trails blocks')) {
    $block = array();
    $type = $delta;
    // list($type, $id) = explode('-', $delta); // This line is in video, but not necessary if we only have one block.
    switch ($delta) { // This was changed from $type to $delta after video was created.
      case 'history':
        // Create list of previous paths.

        // Grab the trail history from a variable
        $trail = variable_get('trails_history', array());

        // Flip the saved array to show newest pages first.
        $reverse_trail = array_reverse($trail);

        // Grab the number of items to display
        $num_items = variable_get('trails_block_num', 5);

        if (count($reverse_trail) < $num_items){
        $num_display = count($reverse_trail);
        } else {
          $num_display = $num_items;
        }

        // Output the latest items as a list
        $output = ''; // Initialize variable, this was added after the video was created.
        for ($i = 0; $i < $num_display; $i++) {
          if ($reverse_trail[$i]) {
            $item = $reverse_trail[$i];
            $output .= '<li>' . l($item['title'], $item['path']) . ' - ' . format_interval(REQUEST_TIME - $item['timestamp']) . ' ' . t('ago') . '</li>';
          }
        }
        if (isset($output)) {
          $output = '
            <p>' . t('Below are the last !num pages you have visited.', array('!num' => $num_items)) . '</p>
            <ul>' . $output . '</ul>
          ';
        }

        // Prepare to return the $block variable with subject (title) and content (output).
        $block['subject'] = 'History';
        $block['content'] = $output;
        break;
    }

    return $block;
  }
}

/**
 * Implements hook_cron().
 *
 * See here for more information:
 * http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_cron/7
 */
function trails_cron() {
  // Get the trail array.
  $trail = variable_get('trails_history', array());
print_r($trail);
  // Get the offset for array_slice, so we can save just last 5 items.
  $count_minus_5 = count($trail) - 5;

  // Cut out everything but the last 5 visits.
  $short_trail = array_slice($trail, $count_minus_5);

  // Save the shorter trail
  variable_set('trails_history', $short_trail);
}